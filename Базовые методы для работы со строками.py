# Метод capitalized() переводит первый символ в строке если он является буквой в верхний регистр, а все следующие за ним
# в нижний регистр

print("aBcD".capitalize()) # Метод не модифицирует имеющуюся строку но создаёт новыую. Если новая строка не присвоится
# новой переменной или не будет переданна функции или методу то она исчезнет

# Метод center() копирует исходную строкуи и центрует её внутри поля заданной длины

print('[' + 'alpha'.center(10) + ']') # центровка происходит засчёт добавления пробелов перед и после строки
print('[' + 'gamma'.center(20, '*') + ']') # методу center() может быть передан и второй параметр, который заменит
# отображение пробелов

# Метод endswith() проверяет заканчивается ли переданная строка специфичиским аргументом или нет.
# Возврашает True или False

if "epsilon".endswith("on"):
    print("yes")
else:
    print("no")

# Метод find() принемает подстроку и возвращает индекс первого вхождения подстроки в строку. Работает только со строками
# при отсутствии подстроки в строке возвращает -1

print("Eta".find("ta"))
print("Eta".find("ma"))

print('kappa'.find('a', 2)) # Двух-параметровый вариант функции позволяет искать часть строки с указанием вхождения

# Метод isalnum() проверяет содержит ли строка только цифры и буквы и возвращает True или False

print("lambda".isalnum())
print("30".isalnum())
print("lambda_30".isalnum())

# Методы isalpha() и isdigit() проверяют содержит ли строка или только буквы или только цифры  и буквы
# и возвращает True или False

print("Mooo".isalpha())
print("30".isalpha())
print("Mooo".isdigit())
print("30".isdigit())
