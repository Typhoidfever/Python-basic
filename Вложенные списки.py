# В языке Python вместо двумерных массивов (матриц) используются вложенные списки (списки списков)

a_list = [[1, 2, 3], [4, 5], [6, 7, 8]] # Создание вложенного списка

# Для перебора и вывода элементов вложенных списков используют вложенные циклы

for i in range(len(a_list)): # Цикл, перебирающий элементы списка
    for j in range(len(a_list[i])): # Цикл, перебирающий элементы вложеных списков
        print(a_list [i] [j], end =' ')
    print()

# Нахождение суммы элементов вложенных списков

s = 0

for i in range(len(a_list)):
    for j in range(len(a_list[i])):
        s += a_list[i][j]

    print(s)

# Три способа создания двумерных списков
# Способ 1 - вначале создаётся список из n элементов, затем каждый элемент списка делается ссылкой на другой список из
# m элементов

n = 3
m = 4

a_list = [0] * n

for i in range(n):
    a_list.append([0] * m)
print(a_list)

# Способ 2 - создать пустой список и добавить в него n раз m элементов

n = 3
m = 4
a_list = []

for i in range(n):
    a_list.append([0] * m)
print(a_list)

# Способ 3 - С помощью генератора списков

n = 3
m = 4
a_list = [[0] * m for i in range(n)]
print(a_list)

# Ввод двумерного списка

n = int(input()) # Ввод количества строк массива-списка
a_list = []

for i in range(n):
    row = input().split() # split() разбивает строку на части
    for i in range(len(row)):
        row[i] = int(row[i])
    a_list.append(row)
print(a_list)

# Создание трёхмерного массива

cube = [[[': (','x', 'x'],
         [' :)', 'x', 'x'],
         [' :)', 'x', 'x']],
        [[': (', 'x', 'x'],
        [' :)', 'x', 'x'],
        [' :)', 'x', 'x']],
        [[': (', 'x', 'x'],
         [' :)', 'x', 'x'],
         [' :)', 'x', 'x']]]
print(cube)
print(cube[0], [0],[0])
print(cube[2], [2], [0])

